{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///./src/components/Common/redirectTo.js","webpack:///./src/redux/_constants/actionTypes.js","webpack:///./src/redux/_reducers/admin/actionR.js","webpack:///./src/redux/_reducers/admin/groupR.js","webpack:///./src/redux/_reducers/admin/permissionR.js","webpack:///./src/redux/_reducers/admin/routeR.js","webpack:///./src/redux/_reducers/admin/userR.js","webpack:///./src/redux/_reducers/alertR.js","webpack:///./src/redux/_reducers/categories/contractR.js","webpack:///./src/redux/_reducers/categories/customerR.js","webpack:///./src/redux/_reducers/categories/datacenterR.js","webpack:///./src/redux/_reducers/categories/departmentR.js","webpack:///./src/redux/_reducers/categories/deviceTemplateR.js","webpack:///./src/redux/_reducers/categories/deviceTypeR.js","webpack:///./src/redux/_reducers/categories/locationR.js","webpack:///./src/redux/_reducers/categories/rackR.js","webpack:///./src/redux/_reducers/categories/regionR.js","webpack:///./src/redux/_reducers/categories/roomR.js","webpack:///./src/redux/_reducers/categories/zoneR.js","webpack:///./src/redux/_reducers/index.js","webpack:///./src/redux/_reducers/layoutR.js","webpack:///./src/redux/_reducers/loadingR.js","webpack:///./src/redux/_reducers/sideMenuR.js","webpack:///./src/redux/store.js","webpack:///./src/utils/config.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"lodash\"","webpack:///external \"next-redux-wrapper\"","webpack:///external \"next/app\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"nookies\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"react-toastify\"","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"redux-thunk\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport App, { Container } from 'next/app'\r\nimport Head from 'next/head';\r\nimport withRedux from 'next-redux-wrapper'\r\nimport { initStore } from '../src/redux/store'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport redirectTo from '../src/components/Common/redirectTo.js';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport _config from '../src/utils/config';\r\nconst config = _config[_config.environment];\r\nimport { parseCookies, setCookie, destroyCookie } from 'nookies';\r\n\r\nexport default withRedux(initStore)(\r\n    class MyApp extends App {\r\n\r\n        static resetCookies(ctx) {\r\n            destroyCookie(ctx, 'authtoken');\r\n            destroyCookie(ctx, 'user');\r\n        }\r\n        static async getInitialProps ({ Component, router, ctx }) {\r\n            try {\r\n                let pageProps = {};\r\n                const coo = parseCookies(ctx);\r\n                if (Component.getInitialProps) {\r\n                    pageProps = await Component.getInitialProps(ctx)\r\n                }\r\n                // console.log(ctx);\r\n                // return  pageProps;\r\n\r\n                //if the authtoken is not found\r\n                // console.log(coo.authtoken, ctx.pathname);\r\n\r\n                const query = ctx.query || {};\r\n                const authtoken = coo.authtoken || query.token;\r\n                console.log(1, authtoken);\r\n                if(!authtoken) {\r\n                    // console.log(2);\r\n\r\n                    try {\r\n                        this.resetCookies(ctx);\r\n                        //don't do anything if we are on a page that doesn't require credentials\r\n                        if(ctx.pathname === \"/login\" || ctx.pathname === \"/forgot-password\") return {pageProps};\r\n                        //if we are on any other page, redirect to the login page\r\n\r\n                        else {\r\n                            const redirect = config.originRoot + '/openid?redirect=' + config.originFrontend;\r\n                            return redirectTo(redirect, { res: ctx.res, status: 301});\r\n                        }\r\n                    } catch (e) {\r\n                        console.log('error 1', e);\r\n                    }\r\n\r\n                }\r\n                //if we do have an auth token to check\r\n                else {\r\n                    // console.log(3);\r\n                    //\r\n                    // console.log('access_token', authtoken, config.environment);\r\n                    // Cookies.set('authtoken', authtoken);\r\n                    setCookie(ctx,'authtoken', authtoken, {\r\n                        maxAge: 24 * 60 * 60,\r\n                        path: '/',\r\n                    });\r\n                    // if(ctx.res) ctx.res.cookie('authtoken', authtoken);\r\n                    let url = '';\r\n                    if(_config.environment === \"production\") {\r\n                        if(ctx.res) {\r\n                            url = 'http://172.27.219.41:3001';\r\n                        } else {\r\n                            url = config.originBackend;\r\n                        }\r\n                    } else {\r\n                        url = config.originBackend;\r\n                    }\r\n                    var response = await fetch(`${url}/raca-api/auth-user`, { method: 'POST', headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ 'access_token': authtoken })\r\n                    })\r\n                        .then( r => r.json() )\r\n                        .then((resp) => {\r\n                            if(ctx.pathname === \"/login\") {\r\n                                try {\r\n                                    // console.log('login local', resp.data);\r\n                                    //shouldn't show the login page is we are already logged in\r\n                                    if(resp.status === 200) {\r\n                                        this.resetCookies(ctx);\r\n                                        redirectTo('/', { res: ctx.res, status: 301 });\r\n                                    }\r\n                                    //if it wasn't successful, stay where we are\r\n                                    else {\r\n                                        this.resetCookies(ctx);\r\n                                        return {...pageProps, ...{query: ctx.query, authtoken: authtoken}};\r\n                                    }\r\n\r\n                                } catch(e) {\r\n                                    console.log('error 2', e);\r\n                                }\r\n                            }\r\n\r\n                            //any other page that requires a login\r\n                            else {\r\n                                try {\r\n                                    // console.log('login SSO', resp.data);\r\n                                    //if auth check was successful, stay where we are\r\n                                    if(resp.status === 200) {\r\n                                        const data = resp.data;\r\n                                        setCookie(ctx,'authtoken', authtoken,{\r\n                                            maxAge: 24 * 60 * 60,\r\n                                            path: '/',\r\n                                        });\r\n                                        setCookie(ctx,'user', JSON.stringify(data.user),{\r\n                                            maxAge: 24 * 60 * 60,\r\n                                            path: '/',\r\n                                        });\r\n\r\n                                        return {...pageProps, ...{query: ctx.query, authtoken: authtoken}};\r\n                                    }\r\n                                    //if it wasn't successful, clear the authtoken since it must be expired or invalid and redirect to login\r\n                                    else {\r\n                                        this.resetCookies(ctx.res);\r\n\r\n                                        // redirectTo(config.prevURL + '/login', { res: ctx.res, status: 301 });\r\n\r\n                                        const redirect = config.originRoot + '/openid';\r\n                                        // const buff = Buffer.from(config.originFrontend, 'utf8').toString('hex');\r\n                                        // // ctx.res.cookie('redirect', buff);\r\n                                        redirectTo(redirect, { res: ctx.res, status: 301});\r\n                                    }\r\n                                } catch (e) {\r\n                                    console.log('error 3', e);\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch((err) => { console.log('err', err); return {pageProps}; })\r\n\r\n                }\r\n                if(response !== null) {\r\n                    // return {response};\r\n                    pageProps = response;\r\n                    return {pageProps};\r\n                } else\r\n                    return {pageProps};\r\n            } catch (error) {\r\n                console.log('error', error)\r\n            }\r\n\r\n        }\r\n\r\n        render () {\r\n            // console.log('router ... ',Router);\r\n            // if(!_.isUndefined(Router.router) && !_.isNull(Router.router) && Router.router.asPath !== '/login'){\r\n            //   Router.push('/login');\r\n            // }\r\n            const { Component, pageProps, store } = this.props;\r\n            return (\r\n                <Container>\r\n\r\n                    <Head>\r\n                        <title>Raca</title>\r\n                    </Head>\r\n                    <Provider store={store}>\r\n                        <Component {...pageProps} />\r\n                    </Provider>\r\n                    <ToastContainer autoClose={2000} />\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n)\r\n","import Router from 'next/router'\n\nexport default function redirectTo(destination, { res, status } = {}) {\n  if (res) {\n    res.writeHead(status || 302, { Location: destination,  });\n    res.end();\n  } else {\n    // console.log('client side');\n    if (destination[0] === '/' && destination[1] !== '/') {\n      Router.push(destination)\n    } else {\n      window.location = destination\n    }\n  }\n}","const actionTypes = {\r\n    TOGGLE_MENU: 'TOGGLE_MENU',\r\n    ACTIVE_ITEM: 'ACTIVE_ITEM',\r\n    ACTIVE_INDEX_SIDEBAR: 'ACTIVE_INDEX_SIDEBAR',\r\n\r\n    //------------ alerts ------------//\r\n    ALERT_SUCCESS: 'ALERT_SUCCESS',\r\n    ALERT_WARNING: 'ALERT_WARNING',\r\n    ALERT_ERROR: 'ALERT_ERROR',\r\n    ALERT_CLEAR: 'ALERT_CLEAR',\r\n    //------------ routes ------------//\r\n    GET_ROUTES_SUCCESS: 'GET_ROUTES_SUCCESS',\r\n    GET_ROUTES_FAILURE: 'GET_ROUTES_FAILURE',\r\n    GET_ALL_ACTION_ROUTE_SUCCESS: 'GET_ALL_ACTION_ROUTE_SUCCESS',\r\n    GET_ALL_ACTION_ROUTE_FAILURE: 'GET_ALL_ACTION_ROUTE_FAILURE',\r\n    GET_ROUTES_BY_ID_SUCCESS: 'GET_ROUTES_BY_ID_SUCCESS',\r\n    GET_ROUTES_BY_ID_FAILURE: 'GET_ROUTES_BY_ID_FAILURE',\r\n    PAGINATION_ROUTES: \"PAGINATION_ROUTES\",\r\n    PAGINATION_ROUTES_CLEAR: \"PAGINATION_ROUTES_CLEAR\",\r\n    ON_PAGE_CHANGE_ROUTES: \"ON_PAGE_CHANGE_ROUTES\",\r\n    GET_ROUTE_PARENTS_SUCCESS: 'GET_ROUTE_PARENTS_SUCCESS',\r\n    GET_ROUTE_PARENTS_FAILURE: 'GET_ROUTE_PARENTS_FAILURE',\r\n    INSERT_ROUTE_REQUEST: 'INSERT_ROUTE_REQUEST',\r\n    INSERT_ROUTE_SUCCESS: 'INSERT_ROUTE_SUCCESS',\r\n    INSERT_ROUTE_FAILURE: 'INSERT_ROUTE_FAILURE',\r\n    UPDATE_ROUTE_REQUEST: 'UPDATE_ROUTE_REQUEST',\r\n    UPDATE_ROUTE_SUCCESS: 'UPDATE_ROUTE_SUCCESS',\r\n    UPDATE_ROUTE_FAILURE: 'UPDATE_ROUTE_FAILURE',\r\n    DELETE_ROUTE_REQUEST: 'DELETE_ROUTE_REQUEST',\r\n    DELETE_ROUTE_SUCCESS: 'DELETE_ROUTE_SUCCESS',\r\n    DELETE_ROUTE_FAILURE: 'DELETE_ROUTE_FAILURE',\r\n    UPDATE_CURRENT_ROUTE: 'UPDATE_CURRENT_ROUTE',\r\n    VALIDATE_ROUTE: 'VALIDATE_ROUTE',\r\n    MODAL_ROUTE: 'MODAL_ROUTE',\r\n    HANDLE_DELETE_ROUTE: 'HANDLE_DELETE_ROUTE',\r\n    HANDLE_UPDATE_ROUTE: 'HANDLE_UPDATE_ROUTE',\r\n    INIT_UPDATE_ROUTE: 'INIT_UPDATE_ROUTE',\r\n    SEARCH_ROUTE: 'SEARCH_ROUTE',\r\n    CHECK_ALL_ACTION_ROUTE: 'CHECK_ALL_ACTION_ROUTE',\r\n    //------------ end routes ------------//\r\n\r\n    //------------ groups ------------//\r\n    GET_GROUPS_SUCCESS: 'GET_GROUPS_SUCCESS',\r\n    GET_GROUPS_FAILURE: 'GET_GROUPS_FAILURE',\r\n    GET_GROUPS_BY_ID_SUCCESS: 'GET_GROUPS_BY_ID_SUCCESS',\r\n    GET_GROUPS_BY_ID_FAILURE: 'GET_GROUPS_BY_ID_FAILURE',\r\n    PAGINATION_GROUPS: \"PAGINATION_GROUPS\",\r\n    PAGINATION_GROUPS_CLEAR: \"PAGINATION_GROUPS_CLEAR\",\r\n    ON_PAGE_CHANGE_GROUPS: \"ON_PAGE_CHANGE_GROUPS\",\r\n    INSERT_GROUP_REQUEST: 'INSERT_GROUP_REQUEST',\r\n    INSERT_GROUP_SUCCESS: 'INSERT_GROUP_SUCCESS',\r\n    INSERT_GROUP_FAILURE: 'INSERT_GROUP_FAILURE',\r\n    UPDATE_GROUP_REQUEST: 'UPDATE_GROUP_REQUEST',\r\n    UPDATE_GROUP_SUCCESS: 'UPDATE_GROUP_SUCCESS',\r\n    UPDATE_GROUP_FAILURE: 'UPDATE_GROUP_FAILURE',\r\n    DELETE_GROUP_REQUEST: 'DELETE_GROUP_REQUEST',\r\n    DELETE_GROUP_SUCCESS: 'DELETE_GROUP_SUCCESS',\r\n    DELETE_GROUP_FAILURE: 'DELETE_GROUP_FAILURE',\r\n    UPDATE_CURRENT_GROUP: 'UPDATE_CURRENT_GROUP',\r\n    VALIDATE_GROUP: 'VALIDATE_GROUP',\r\n    MODAL_GROUP: 'MODAL_GROUP',\r\n    HANDLE_DELETE_GROUP: 'HANDLE_DELETE_GROUP',\r\n    HANDLE_UPDATE_GROUP: 'HANDLE_UPDATE_GROUP',\r\n    INIT_UPDATE_GROUP: 'INIT_UPDATE_GROUP',\r\n    SEARCH_GROUP: 'SEARCH_GROUP',\r\n    //------------ end groups ------------//\r\n\r\n    //------------ actions ------------//\r\n    GET_ACTIONS_SUCCESS: 'GET_ACTIONS_SUCCESS',\r\n    GET_ACTIONS_FAILURE: 'GET_ACTIONS_FAILURE',\r\n    GET_ACTIONS_BY_ID_SUCCESS: 'GET_ACTIONS_BY_ID_SUCCESS',\r\n    GET_ACTIONS_BY_ID_FAILURE: 'GET_ACTIONS_BY_ID_FAILURE',\r\n    PAGINATION_ACTIONS: \"PAGINATION_ACTIONS\",\r\n    PAGINATION_ACTIONS_CLEAR: \"PAGINATION_ACTIONS_CLEAR\",\r\n    ON_PAGE_CHANGE_ACTIONS: \"ON_PAGE_CHANGE_ACTIONS\",\r\n    INSERT_ACTION_REQUEST: 'INSERT_ACTION_REQUEST',\r\n    INSERT_ACTION_SUCCESS: 'INSERT_ACTION_SUCCESS',\r\n    INSERT_ACTION_FAILURE: 'INSERT_ACTION_FAILURE',\r\n    UPDATE_ACTION_REQUEST: 'UPDATE_ACTION_REQUEST',\r\n    UPDATE_ACTION_SUCCESS: 'UPDATE_ACTION_SUCCESS',\r\n    UPDATE_ACTION_FAILURE: 'UPDATE_ACTION_FAILURE',\r\n    DELETE_ACTION_REQUEST: 'DELETE_ACTION_REQUEST',\r\n    DELETE_ACTION_SUCCESS: 'DELETE_ACTION_SUCCESS',\r\n    DELETE_ACTION_FAILURE: 'DELETE_ACTION_FAILURE',\r\n    UPDATE_CURRENT_ACTION: 'UPDATE_CURRENT_ACTION',\r\n    VALIDATE_ACTION: 'VALIDATE_ACTION',\r\n    MODAL_ACTION: 'MODAL_ACTION',\r\n    HANDLE_DELETE_ACTION: 'HANDLE_DELETE_ACTION',\r\n    HANDLE_UPDATE_ACTION: 'HANDLE_UPDATE_ACTION',\r\n    INIT_UPDATE_ACTION: 'INIT_UPDATE_ACTION',\r\n    SEARCH_ACTION: 'SEARCH_ACTION',\r\n    //------------ end actions ------------//\r\n\r\n    //------------ users ------------//\r\n    GET_USERS_SUCCESS: 'GET_USERS_SUCCESS',\r\n    GET_USERS_FAILURE: 'GET_USERS_FAILURE',\r\n    GET_USERS_BY_ID_SUCCESS: 'GET_USERS_BY_ID_SUCCESS',\r\n    GET_USERS_BY_ID_FAILURE: 'GET_USERS_BY_ID_FAILURE',\r\n    PAGINATION_USERS: \"PAGINATION_USERS\",\r\n    PAGINATION_USERS_CLEAR: \"PAGINATION_USERS_CLEAR\",\r\n    ON_PAGE_CHANGE_USERS: \"ON_PAGE_CHANGE_USERS\",\r\n    INSERT_USER_REQUEST: 'INSERT_USER_REQUEST',\r\n    INSERT_USER_SUCCESS: 'INSERT_USER_SUCCESS',\r\n    INSERT_USER_FAILURE: 'INSERT_USER_FAILURE',\r\n    UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST',\r\n    UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\r\n    UPDATE_USER_FAILURE: 'UPDATE_USER_FAILURE',\r\n    DELETE_USER_REQUEST: 'DELETE_USER_REQUEST',\r\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\r\n    DELETE_USER_FAILURE: 'DELETE_USER_FAILURE',\r\n    UPDATE_CURRENT_USER: 'UPDATE_CURRENT_USER',\r\n    VALIDATE_USER: 'VALIDATE_USER',\r\n    MODAL_USER: 'MODAL_USER',\r\n    HANDLE_DELETE_USER: 'HANDLE_DELETE_USER',\r\n    HANDLE_UPDATE_USER: 'HANDLE_UPDATE_USER',\r\n    INIT_UPDATE_USER: 'INIT_UPDATE_USER',\r\n    SEARCH_USER: 'SEARCH_USER',\r\n    GET_USER_OTHER_SUCCESS: 'GET_USER_OTHER_SUCCESS',\r\n    GET_USER_OTHER_FAILURE: 'GET_USER_OTHER_FAILURE',\r\n    //------------ end users ------------//\r\n\r\n    //------------ permissions ------------//\r\n    GET_PERMISSION_OTHER: 'GET_PERMISSION_OTHER',\r\n    HANDLE_UPDATE_PERMISSION: 'HANDLE_UPDATE_PERMISSION',\r\n    HANDLE_CANCEL_PERMISSION: 'HANDLE_CANCEL_PERMISSION',\r\n    HANDLE_SAVE_PERMISSION_SUCCESS: 'HANDLE_SAVE_PERMISSION_SUCCESS',\r\n    HANDLE_GET_PERMISSION_SUCCESS: 'HANDLE_GET_PERMISSION_SUCCESS',\r\n    UPDATE_CURRENT_PERMISSION: 'UPDATE_CURRENT_PERMISSION',\r\n    //------------ end permissions ------------//\r\n\r\n    //------------ locations ------------//\r\n    GET_LOCATIONS_SUCCESS: 'GET_LOCATIONS_SUCCESS',\r\n    GET_LOCATIONS_FAILURE: 'GET_LOCATIONS_FAILURE',\r\n    GET_LOCATIONS_BY_ID_SUCCESS: 'GET_LOCATIONS_BY_ID_SUCCESS',\r\n    GET_LOCATIONS_BY_ID_FAILURE: 'GET_LOCATIONS_BY_ID_FAILURE',\r\n    PAGINATION_LOCATIONS: \"PAGINATION_LOCATIONS\",\r\n    PAGINATION_LOCATIONS_CLEAR: \"PAGINATION_LOCATIONS_CLEAR\",\r\n    ON_PAGE_CHANGE_LOCATIONS: \"ON_PAGE_CHANGE_LOCATIONS\",\r\n    GET_LOCATION_PARENTS_SUCCESS: 'GET_LOCATION_PARENTS_SUCCESS',\r\n    GET_LOCATION_PARENTS_FAILURE: 'GET_LOCATION_PARENTS_FAILURE',\r\n    INSERT_LOCATION_REQUEST: 'INSERT_LOCATION_REQUEST',\r\n    INSERT_LOCATION_SUCCESS: 'INSERT_LOCATION_SUCCESS',\r\n    INSERT_LOCATION_FAILURE: 'INSERT_LOCATION_FAILURE',\r\n    UPDATE_LOCATION_REQUEST: 'UPDATE_LOCATION_REQUEST',\r\n    UPDATE_LOCATION_SUCCESS: 'UPDATE_LOCATION_SUCCESS',\r\n    UPDATE_LOCATION_FAILURE: 'UPDATE_LOCATION_FAILURE',\r\n    DELETE_LOCATION_REQUEST: 'DELETE_LOCATION_REQUEST',\r\n    DELETE_LOCATION_SUCCESS: 'DELETE_LOCATION_SUCCESS',\r\n    DELETE_LOCATION_FAILURE: 'DELETE_LOCATION_FAILURE',\r\n    UPDATE_CURRENT_LOCATION: 'UPDATE_CURRENT_LOCATION',\r\n    VALIDATE_LOCATION: 'VALIDATE_LOCATION',\r\n    MODAL_LOCATION: 'MODAL_LOCATION',\r\n    HANDLE_DELETE_LOCATION: 'HANDLE_DELETE_LOCATION',\r\n    HANDLE_UPDATE_LOCATION: 'HANDLE_UPDATE_LOCATION',\r\n    INIT_UPDATE_LOCATION: 'INIT_UPDATE_LOCATION',\r\n    SEARCH_LOCATION: 'SEARCH_LOCATION',\r\n    //------------ end locations ------------//\r\n\r\n    //------------ datacenters ------------//\r\n    GET_DATACENTERS_SUCCESS: 'GET_DATACENTERS_SUCCESS',\r\n    GET_DATACENTERS_FAILURE: 'GET_DATACENTERS_FAILURE',\r\n    GET_DATACENTER_OTHER_SUCCESS: 'GET_DATACENTER_OTHER_SUCCESS',\r\n    GET_DATACENTER_OTHER_FAILURE: 'GET_DATACENTER_OTHER_FAILURE',\r\n    GET_DATACENTERS_BY_ID_SUCCESS: 'GET_DATACENTERS_BY_ID_SUCCESS',\r\n    GET_DATACENTERS_BY_ID_FAILURE: 'GET_DATACENTERS_BY_ID_FAILURE',\r\n    PAGINATION_DATACENTERS: \"PAGINATION_DATACENTERS\",\r\n    PAGINATION_DATACENTERS_CLEAR: \"PAGINATION_DATACENTERS_CLEAR\",\r\n    ON_PAGE_CHANGE_DATACENTERS: \"ON_PAGE_CHANGE_DATACENTERS\",\r\n    GET_DATACENTER_PARENTS_SUCCESS: 'GET_DATACENTER_PARENTS_SUCCESS',\r\n    GET_DATACENTER_PARENTS_FAILURE: 'GET_DATACENTER_PARENTS_FAILURE',\r\n    INSERT_DATACENTER_REQUEST: 'INSERT_DATACENTER_REQUEST',\r\n    INSERT_DATACENTER_SUCCESS: 'INSERT_DATACENTER_SUCCESS',\r\n    INSERT_DATACENTER_FAILURE: 'INSERT_DATACENTER_FAILURE',\r\n    UPDATE_DATACENTER_REQUEST: 'UPDATE_DATACENTER_REQUEST',\r\n    UPDATE_DATACENTER_SUCCESS: 'UPDATE_DATACENTER_SUCCESS',\r\n    UPDATE_DATACENTER_FAILURE: 'UPDATE_DATACENTER_FAILURE',\r\n    DELETE_DATACENTER_REQUEST: 'DELETE_DATACENTER_REQUEST',\r\n    DELETE_DATACENTER_SUCCESS: 'DELETE_DATACENTER_SUCCESS',\r\n    DELETE_DATACENTER_FAILURE: 'DELETE_DATACENTER_FAILURE',\r\n    UPDATE_CURRENT_DATACENTER: 'UPDATE_CURRENT_DATACENTER',\r\n    VALIDATE_DATACENTER: 'VALIDATE_DATACENTER',\r\n    MODAL_DATACENTER: 'MODAL_DATACENTER',\r\n    HANDLE_DELETE_DATACENTER: 'HANDLE_DELETE_DATACENTER',\r\n    HANDLE_UPDATE_DATACENTER: 'HANDLE_UPDATE_DATACENTER',\r\n    INIT_UPDATE_DATACENTER: 'INIT_UPDATE_DATACENTER',\r\n    SEARCH_DATACENTER: 'SEARCH_DATACENTER',\r\n    //------------ end datacenters ------------//\r\n\r\n    //------------ rooms ------------//\r\n    GET_ROOMS_SUCCESS: 'GET_ROOMS_SUCCESS',\r\n    GET_ROOMS_FAILURE: 'GET_ROOMS_FAILURE',\r\n    GET_ROOM_OTHER_SUCCESS: 'GET_ROOM_OTHER_SUCCESS',\r\n    GET_ROOM_OTHER_FAILURE: 'GET_ROOM_OTHER_FAILURE',\r\n    GET_ROOMS_BY_ID_SUCCESS: 'GET_ROOMS_BY_ID_SUCCESS',\r\n    GET_ROOMS_BY_ID_FAILURE: 'GET_ROOMS_BY_ID_FAILURE',\r\n    PAGINATION_ROOMS: \"PAGINATION_ROOMS\",\r\n    PAGINATION_ROOMS_CLEAR: \"PAGINATION_ROOMS_CLEAR\",\r\n    ON_PAGE_CHANGE_ROOMS: \"ON_PAGE_CHANGE_ROOMS\",\r\n    GET_ROOM_PARENTS_SUCCESS: 'GET_ROOM_PARENTS_SUCCESS',\r\n    GET_ROOM_PARENTS_FAILURE: 'GET_ROOM_PARENTS_FAILURE',\r\n    INSERT_ROOM_REQUEST: 'INSERT_ROOM_REQUEST',\r\n    INSERT_ROOM_SUCCESS: 'INSERT_ROOM_SUCCESS',\r\n    INSERT_ROOM_FAILURE: 'INSERT_ROOM_FAILURE',\r\n    UPDATE_ROOM_REQUEST: 'UPDATE_ROOM_REQUEST',\r\n    UPDATE_ROOM_SUCCESS: 'UPDATE_ROOM_SUCCESS',\r\n    UPDATE_ROOM_FAILURE: 'UPDATE_ROOM_FAILURE',\r\n    DELETE_ROOM_REQUEST: 'DELETE_ROOM_REQUEST',\r\n    DELETE_ROOM_SUCCESS: 'DELETE_ROOM_SUCCESS',\r\n    DELETE_ROOM_FAILURE: 'DELETE_ROOM_FAILURE',\r\n    UPDATE_CURRENT_ROOM: 'UPDATE_CURRENT_ROOM',\r\n    VALIDATE_ROOM: 'VALIDATE_ROOM',\r\n    MODAL_ROOM: 'MODAL_ROOM',\r\n    HANDLE_DELETE_ROOM: 'HANDLE_DELETE_ROOM',\r\n    HANDLE_UPDATE_ROOM: 'HANDLE_UPDATE_ROOM',\r\n    INIT_UPDATE_ROOM: 'INIT_UPDATE_ROOM',\r\n    SEARCH_ROOM: 'SEARCH_ROOM',\r\n    ONCHANGE_LOCATION_ROOM: 'ONCHANGE_LOCATION_ROOM',\r\n    //------------ end rooms ------------//\r\n\r\n    //------------ zones ------------//\r\n    GET_ZONES_SUCCESS: 'GET_ZONES_SUCCESS',\r\n    GET_ZONES_FAILURE: 'GET_ZONES_FAILURE',\r\n    GET_ZONE_OTHER_SUCCESS: 'GET_ZONE_OTHER_SUCCESS',\r\n    GET_ZONE_OTHER_FAILURE: 'GET_ZONE_OTHER_FAILURE',\r\n    GET_ZONES_BY_ID_SUCCESS: 'GET_ZONES_BY_ID_SUCCESS',\r\n    GET_ZONES_BY_ID_FAILURE: 'GET_ZONES_BY_ID_FAILURE',\r\n    PAGINATION_ZONES: \"PAGINATION_ZONES\",\r\n    PAGINATION_ZONES_CLEAR: \"PAGINATION_ZONES_CLEAR\",\r\n    ON_PAGE_CHANGE_ZONES: \"ON_PAGE_CHANGE_ZONES\",\r\n    GET_ZONE_PARENTS_SUCCESS: 'GET_ZONE_PARENTS_SUCCESS',\r\n    GET_ZONE_PARENTS_FAILURE: 'GET_ZONE_PARENTS_FAILURE',\r\n    INSERT_ZONE_REQUEST: 'INSERT_ZONE_REQUEST',\r\n    INSERT_ZONE_SUCCESS: 'INSERT_ZONE_SUCCESS',\r\n    INSERT_ZONE_FAILURE: 'INSERT_ZONE_FAILURE',\r\n    UPDATE_ZONE_REQUEST: 'UPDATE_ZONE_REQUEST',\r\n    UPDATE_ZONE_SUCCESS: 'UPDATE_ZONE_SUCCESS',\r\n    UPDATE_ZONE_FAILURE: 'UPDATE_ZONE_FAILURE',\r\n    DELETE_ZONE_REQUEST: 'DELETE_ZONE_REQUEST',\r\n    DELETE_ZONE_SUCCESS: 'DELETE_ZONE_SUCCESS',\r\n    DELETE_ZONE_FAILURE: 'DELETE_ZONE_FAILURE',\r\n    UPDATE_CURRENT_ZONE: 'UPDATE_CURRENT_ZONE',\r\n    VALIDATE_ZONE: 'VALIDATE_ZONE',\r\n    MODAL_ZONE: 'MODAL_ZONE',\r\n    HANDLE_DELETE_ZONE: 'HANDLE_DELETE_ZONE',\r\n    HANDLE_UPDATE_ZONE: 'HANDLE_UPDATE_ZONE',\r\n    INIT_UPDATE_ZONE: 'INIT_UPDATE_ZONE',\r\n    SEARCH_ZONE: 'SEARCH_ZONE',\r\n    ONCHANGE_LOCATION_ZONE: 'ONCHANGE_LOCATION_ZONE',\r\n    ONCHANGE_DATACENTER_ZONE: 'ONCHANGE_DATACENTER_ZONE',\r\n    ONCHANGE_ROOM_ZONE: 'ONCHANGE_ROOM_ZONE',\r\n    HANDLE_VIEW_IMAGE_ZONE: 'HANDLE_VIEW_IMAGE_ZONE',\r\n    HANDLE_CLOSE_VIEW_IMAGE_ZONE: 'HANDLE_CLOSE_VIEW_IMAGE_ZONE',\r\n    //------------ end zones ------------//\r\n\r\n    //------------ customers ------------//\r\n    GET_CUSTOMERS_SUCCESS: 'GET_CUSTOMERS_SUCCESS',\r\n    GET_CUSTOMERS_FAILURE: 'GET_CUSTOMERS_FAILURE',\r\n    GET_CUSTOMER_OTHER_SUCCESS: 'GET_CUSTOMER_OTHER_SUCCESS',\r\n    GET_CUSTOMER_OTHER_FAILURE: 'GET_CUSTOMER_OTHER_FAILURE',\r\n    GET_CUSTOMERS_BY_ID_SUCCESS: 'GET_CUSTOMERS_BY_ID_SUCCESS',\r\n    GET_CUSTOMERS_BY_ID_FAILURE: 'GET_CUSTOMERS_BY_ID_FAILURE',\r\n    PAGINATION_CUSTOMERS: \"PAGINATION_CUSTOMERS\",\r\n    PAGINATION_CUSTOMERS_CLEAR: \"PAGINATION_CUSTOMERS_CLEAR\",\r\n    ON_PAGE_CHANGE_CUSTOMERS: \"ON_PAGE_CHANGE_CUSTOMERS\",\r\n    GET_CUSTOMER_PARENTS_SUCCESS: 'GET_CUSTOMER_PARENTS_SUCCESS',\r\n    GET_CUSTOMER_PARENTS_FAILURE: 'GET_CUSTOMER_PARENTS_FAILURE',\r\n    INSERT_CUSTOMER_REQUEST: 'INSERT_CUSTOMER_REQUEST',\r\n    INSERT_CUSTOMER_SUCCESS: 'INSERT_CUSTOMER_SUCCESS',\r\n    INSERT_CUSTOMER_FAILURE: 'INSERT_CUSTOMER_FAILURE',\r\n    UPDATE_CUSTOMER_REQUEST: 'UPDATE_CUSTOMER_REQUEST',\r\n    UPDATE_CUSTOMER_SUCCESS: 'UPDATE_CUSTOMER_SUCCESS',\r\n    UPDATE_CUSTOMER_FAILURE: 'UPDATE_CUSTOMER_FAILURE',\r\n    DELETE_CUSTOMER_REQUEST: 'DELETE_CUSTOMER_REQUEST',\r\n    DELETE_CUSTOMER_SUCCESS: 'DELETE_CUSTOMER_SUCCESS',\r\n    DELETE_CUSTOMER_FAILURE: 'DELETE_CUSTOMER_FAILURE',\r\n    UPDATE_CURRENT_CUSTOMER: 'UPDATE_CURRENT_CUSTOMER',\r\n    VALIDATE_CUSTOMER: 'VALIDATE_CUSTOMER',\r\n    MODAL_CUSTOMER: 'MODAL_CUSTOMER',\r\n    HANDLE_DELETE_CUSTOMER: 'HANDLE_DELETE_CUSTOMER',\r\n    HANDLE_UPDATE_CUSTOMER: 'HANDLE_UPDATE_CUSTOMER',\r\n    INIT_UPDATE_CUSTOMER: 'INIT_UPDATE_CUSTOMER',\r\n    SEARCH_CUSTOMER: 'SEARCH_CUSTOMER',\r\n    //------------ end customers ------------//\r\n\r\n    //------------ departments ------------//\r\n    GET_DEPARTMENTS_SUCCESS: 'GET_DEPARTMENTS_SUCCESS',\r\n    GET_DEPARTMENTS_FAILURE: 'GET_DEPARTMENTS_FAILURE',\r\n    GET_DEPARTMENT_OTHER_SUCCESS: 'GET_DEPARTMENT_OTHER_SUCCESS',\r\n    GET_DEPARTMENT_OTHER_FAILURE: 'GET_DEPARTMENT_OTHER_FAILURE',\r\n    GET_DEPARTMENTS_BY_ID_SUCCESS: 'GET_DEPARTMENTS_BY_ID_SUCCESS',\r\n    GET_DEPARTMENTS_BY_ID_FAILURE: 'GET_DEPARTMENTS_BY_ID_FAILURE',\r\n    PAGINATION_DEPARTMENTS: \"PAGINATION_DEPARTMENTS\",\r\n    PAGINATION_DEPARTMENTS_CLEAR: \"PAGINATION_DEPARTMENTS_CLEAR\",\r\n    ON_PAGE_CHANGE_DEPARTMENTS: \"ON_PAGE_CHANGE_DEPARTMENTS\",\r\n    GET_DEPARTMENT_PARENTS_SUCCESS: 'GET_DEPARTMENT_PARENTS_SUCCESS',\r\n    GET_DEPARTMENT_PARENTS_FAILURE: 'GET_DEPARTMENT_PARENTS_FAILURE',\r\n    INSERT_DEPARTMENT_REQUEST: 'INSERT_DEPARTMENT_REQUEST',\r\n    INSERT_DEPARTMENT_SUCCESS: 'INSERT_DEPARTMENT_SUCCESS',\r\n    INSERT_DEPARTMENT_FAILURE: 'INSERT_DEPARTMENT_FAILURE',\r\n    UPDATE_DEPARTMENT_REQUEST: 'UPDATE_DEPARTMENT_REQUEST',\r\n    UPDATE_DEPARTMENT_SUCCESS: 'UPDATE_DEPARTMENT_SUCCESS',\r\n    UPDATE_DEPARTMENT_FAILURE: 'UPDATE_DEPARTMENT_FAILURE',\r\n    DELETE_DEPARTMENT_REQUEST: 'DELETE_DEPARTMENT_REQUEST',\r\n    DELETE_DEPARTMENT_SUCCESS: 'DELETE_DEPARTMENT_SUCCESS',\r\n    DELETE_DEPARTMENT_FAILURE: 'DELETE_DEPARTMENT_FAILURE',\r\n    UPDATE_CURRENT_DEPARTMENT: 'UPDATE_CURRENT_DEPARTMENT',\r\n    VALIDATE_DEPARTMENT: 'VALIDATE_DEPARTMENT',\r\n    MODAL_DEPARTMENT: 'MODAL_DEPARTMENT',\r\n    HANDLE_DELETE_DEPARTMENT: 'HANDLE_DELETE_DEPARTMENT',\r\n    HANDLE_UPDATE_DEPARTMENT: 'HANDLE_UPDATE_DEPARTMENT',\r\n    INIT_UPDATE_DEPARTMENT: 'INIT_UPDATE_DEPARTMENT',\r\n    SEARCH_DEPARTMENT: 'SEARCH_DEPARTMENT',\r\n    //------------ end departments ------------//\r\n\r\n    //------------ regions ------------//\r\n    GET_REGIONS_SUCCESS: 'GET_REGIONS_SUCCESS',\r\n    GET_REGIONS_FAILURE: 'GET_REGIONS_FAILURE',\r\n    GET_REGION_OTHER_SUCCESS: 'GET_REGION_OTHER_SUCCESS',\r\n    GET_REGION_OTHER_FAILURE: 'GET_REGION_OTHER_FAILURE',\r\n    GET_REGIONS_BY_ID_SUCCESS: 'GET_REGIONS_BY_ID_SUCCESS',\r\n    GET_REGIONS_BY_ID_FAILURE: 'GET_REGIONS_BY_ID_FAILURE',\r\n    PAGINATION_REGIONS: \"PAGINATION_REGIONS\",\r\n    PAGINATION_REGIONS_CLEAR: \"PAGINATION_REGIONS_CLEAR\",\r\n    ON_PAGE_CHANGE_REGIONS: \"ON_PAGE_CHANGE_REGIONS\",\r\n    GET_REGION_PARENTS_SUCCESS: 'GET_REGION_PARENTS_SUCCESS',\r\n    GET_REGION_PARENTS_FAILURE: 'GET_REGION_PARENTS_FAILURE',\r\n    INSERT_REGION_REQUEST: 'INSERT_REGION_REQUEST',\r\n    INSERT_REGION_SUCCESS: 'INSERT_REGION_SUCCESS',\r\n    INSERT_REGION_FAILURE: 'INSERT_REGION_FAILURE',\r\n    UPDATE_REGION_REQUEST: 'UPDATE_REGION_REQUEST',\r\n    UPDATE_REGION_SUCCESS: 'UPDATE_REGION_SUCCESS',\r\n    UPDATE_REGION_FAILURE: 'UPDATE_REGION_FAILURE',\r\n    DELETE_REGION_REQUEST: 'DELETE_REGION_REQUEST',\r\n    DELETE_REGION_SUCCESS: 'DELETE_REGION_SUCCESS',\r\n    DELETE_REGION_FAILURE: 'DELETE_REGION_FAILURE',\r\n    UPDATE_CURRENT_REGION: 'UPDATE_CURRENT_REGION',\r\n    VALIDATE_REGION: 'VALIDATE_REGION',\r\n    MODAL_REGION: 'MODAL_REGION',\r\n    HANDLE_DELETE_REGION: 'HANDLE_DELETE_REGION',\r\n    HANDLE_UPDATE_REGION: 'HANDLE_UPDATE_REGION',\r\n    INIT_UPDATE_REGION: 'INIT_UPDATE_REGION',\r\n    SEARCH_REGION: 'SEARCH_REGION',\r\n    //------------ end regions ------------//\r\n\r\n    //------------ device types ------------//\r\n    GET_DEVICE_TYPES_SUCCESS: 'GET_DEVICE_TYPES_SUCCESS',\r\n    GET_DEVICE_TYPES_FAILURE: 'GET_DEVICE_TYPES_FAILURE',\r\n    GET_DEVICE_TYPE_OTHER_SUCCESS: 'GET_DEVICE_TYPE_OTHER_SUCCESS',\r\n    GET_DEVICE_TYPE_OTHER_FAILURE: 'GET_DEVICE_TYPE_OTHER_FAILURE',\r\n    GET_DEVICE_TYPES_BY_ID_SUCCESS: 'GET_DEVICE_TYPES_BY_ID_SUCCESS',\r\n    GET_DEVICE_TYPES_BY_ID_FAILURE: 'GET_DEVICE_TYPES_BY_ID_FAILURE',\r\n    PAGINATION_DEVICE_TYPES: \"PAGINATION_DEVICE_TYPES\",\r\n    PAGINATION_DEVICE_TYPES_CLEAR: \"PAGINATION_DEVICE_TYPES_CLEAR\",\r\n    ON_PAGE_CHANGE_DEVICE_TYPES: \"ON_PAGE_CHANGE_DEVICE_TYPES\",\r\n    GET_DEVICE_TYPE_PARENTS_SUCCESS: 'GET_DEVICE_TYPE_PARENTS_SUCCESS',\r\n    GET_DEVICE_TYPE_PARENTS_FAILURE: 'GET_DEVICE_TYPE_PARENTS_FAILURE',\r\n    INSERT_DEVICE_TYPE_REQUEST: 'INSERT_DEVICE_TYPE_REQUEST',\r\n    INSERT_DEVICE_TYPE_SUCCESS: 'INSERT_DEVICE_TYPE_SUCCESS',\r\n    INSERT_DEVICE_TYPE_FAILURE: 'INSERT_DEVICE_TYPE_FAILURE',\r\n    IMPORT_DEVICE_TYPE_SUCCESS: 'IMPORT_DEVICE_TYPE_SUCCESS',\r\n    IMPORT_DEVICE_TYPE_FAILURE: 'IMPORT_DEVICE_TYPE_FAILURE',\r\n    UPDATE_DEVICE_TYPE_REQUEST: 'UPDATE_DEVICE_TYPE_REQUEST',\r\n    UPDATE_DEVICE_TYPE_SUCCESS: 'UPDATE_DEVICE_TYPE_SUCCESS',\r\n    UPDATE_DEVICE_TYPE_FAILURE: 'UPDATE_DEVICE_TYPE_FAILURE',\r\n    DELETE_DEVICE_TYPE_REQUEST: 'DELETE_DEVICE_TYPE_REQUEST',\r\n    DELETE_DEVICE_TYPE_SUCCESS: 'DELETE_DEVICE_TYPE_SUCCESS',\r\n    DELETE_DEVICE_TYPE_FAILURE: 'DELETE_DEVICE_TYPE_FAILURE',\r\n    UPDATE_CURRENT_DEVICE_TYPE: 'UPDATE_CURRENT_DEVICE_TYPE',\r\n    VALIDATE_DEVICE_TYPE: 'VALIDATE_DEVICE_TYPE',\r\n    MODAL_DEVICE_TYPE: 'MODAL_DEVICE_TYPE',\r\n    HANDLE_DELETE_DEVICE_TYPE: 'HANDLE_DELETE_DEVICE_TYPE',\r\n    HANDLE_UPDATE_DEVICE_TYPE: 'HANDLE_UPDATE_DEVICE_TYPE',\r\n    INIT_UPDATE_DEVICE_TYPE: 'INIT_UPDATE_DEVICE_TYPE',\r\n    SEARCH_DEVICE_TYPE: 'SEARCH_DEVICE_TYPE',\r\n    //------------ end device types ------------//\r\n\r\n    //------------ device templates ------------//\r\n    GET_DEVICE_TEMPLATES_SUCCESS: 'GET_DEVICE_TEMPLATES_SUCCESS',\r\n    GET_DEVICE_TEMPLATES_FAILURE: 'GET_DEVICE_TEMPLATES_FAILURE',\r\n    GET_DEVICE_TYPE_DEVICE_TEMPLATES_SUCCESS: 'GET_DEVICE_TYPE_DEVICE_TEMPLATES_SUCCESS',\r\n    GET_DEVICE_TYPE_DEVICE_TEMPLATES_FAILURE: 'GET_DEVICE_TYPE_DEVICE_TEMPLATES_FAILURE',\r\n    GET_DEVICE_TEMPLATE_OTHER_SUCCESS: 'GET_DEVICE_TEMPLATE_OTHER_SUCCESS',\r\n    GET_DEVICE_TEMPLATE_OTHER_FAILURE: 'GET_DEVICE_TEMPLATE_OTHER_FAILURE',\r\n    GET_DEVICE_TEMPLATES_BY_ID_SUCCESS: 'GET_DEVICE_TEMPLATES_BY_ID_SUCCESS',\r\n    GET_DEVICE_TEMPLATES_BY_ID_FAILURE: 'GET_DEVICE_TEMPLATES_BY_ID_FAILURE',\r\n    PAGINATION_DEVICE_TEMPLATES: \"PAGINATION_DEVICE_TEMPLATES\",\r\n    PAGINATION_DEVICE_TEMPLATES_CLEAR: \"PAGINATION_DEVICE_TEMPLATES_CLEAR\",\r\n    ON_PAGE_CHANGE_DEVICE_TEMPLATES: \"ON_PAGE_CHANGE_DEVICE_TEMPLATES\",\r\n    GET_DEVICE_TEMPLATE_PARENTS_SUCCESS: 'GET_DEVICE_TEMPLATE_PARENTS_SUCCESS',\r\n    GET_DEVICE_TEMPLATE_PARENTS_FAILURE: 'GET_DEVICE_TEMPLATE_PARENTS_FAILURE',\r\n    INSERT_DEVICE_TEMPLATE_REQUEST: 'INSERT_DEVICE_TEMPLATE_REQUEST',\r\n    INSERT_DEVICE_TEMPLATE_SUCCESS: 'INSERT_DEVICE_TEMPLATE_SUCCESS',\r\n    INSERT_DEVICE_TEMPLATE_FAILURE: 'INSERT_DEVICE_TEMPLATE_FAILURE',\r\n    IMPORT_DEVICE_TEMPLATE_SUCCESS: 'IMPORT_DEVICE_TEMPLATE_SUCCESS',\r\n    IMPORT_DEVICE_TEMPLATE_FAILURE: 'IMPORT_DEVICE_TEMPLATE_FAILURE',\r\n    UPDATE_DEVICE_TEMPLATE_REQUEST: 'UPDATE_DEVICE_TEMPLATE_REQUEST',\r\n    UPDATE_DEVICE_TEMPLATE_SUCCESS: 'UPDATE_DEVICE_TEMPLATE_SUCCESS',\r\n    UPDATE_DEVICE_TEMPLATE_FAILURE: 'UPDATE_DEVICE_TEMPLATE_FAILURE',\r\n    DELETE_DEVICE_TEMPLATE_REQUEST: 'DELETE_DEVICE_TEMPLATE_REQUEST',\r\n    DELETE_DEVICE_TEMPLATE_SUCCESS: 'DELETE_DEVICE_TEMPLATE_SUCCESS',\r\n    DELETE_DEVICE_TEMPLATE_FAILURE: 'DELETE_DEVICE_TEMPLATE_FAILURE',\r\n    UPDATE_CURRENT_DEVICE_TEMPLATE: 'UPDATE_CURRENT_DEVICE_TEMPLATE',\r\n    VALIDATE_DEVICE_TEMPLATE: 'VALIDATE_DEVICE_TEMPLATE',\r\n    MODAL_DEVICE_TEMPLATE: 'MODAL_DEVICE_TEMPLATE',\r\n    HANDLE_DELETE_DEVICE_TEMPLATE: 'HANDLE_DELETE_DEVICE_TEMPLATE',\r\n    HANDLE_UPDATE_DEVICE_TEMPLATE: 'HANDLE_UPDATE_DEVICE_TEMPLATE',\r\n    INIT_UPDATE_DEVICE_TEMPLATE: 'INIT_UPDATE_DEVICE_TEMPLATE',\r\n    SEARCH_DEVICE_TEMPLATE: 'SEARCH_DEVICE_TEMPLATE',\r\n    //------------ end device templates ------------//\r\n\r\n    //------------ racks ------------//\r\n    GET_RACKS_SUCCESS: 'GET_RACKS_SUCCESS',\r\n    GET_RACKS_FAILURE: 'GET_RACKS_FAILURE',\r\n    GET_RACK_OTHER_SUCCESS: 'GET_RACK_OTHER_SUCCESS',\r\n    GET_RACK_OTHER_FAILURE: 'GET_RACK_OTHER_FAILURE',\r\n    GET_RACK_OTHER_PLUS_SUCCESS: 'GET_RACK_OTHER_PLUS_SUCCESS',\r\n    GET_RACK_OTHER_PLUS_FAILURE: 'GET_RACK_OTHER_PLUS_FAILURE',\r\n    GET_RACK_BY_ID_SUCCESS: 'GET_RACK_BY_ID_SUCCESS',\r\n    GET_RACK_BY_ID_FAILURE: 'GET_RACK_BY_ID_FAILURE',\r\n    GET_RACKS_BY_ZONE_REQUEST: 'GET_RACKS_BY_ZONE_REQUEST',\r\n    GET_RACKS_BY_ZONE_SUCCESS: 'GET_RACKS_BY_ZONE_SUCCESS',\r\n    GET_RACKS_BY_ZONE_FAILURE: 'GET_RACKS_BY_ZONE_FAILURE',\r\n    GET_RACKS_BY_ZONES_REQUEST: 'GET_RACKS_BY_ZONES_REQUEST',\r\n    GET_RACKS_BY_ZONES_SUCCESS: 'GET_RACKS_BY_ZONES_SUCCESS',\r\n    GET_RACKS_BY_ZONES_FAILURE: 'GET_RACKS_BY_ZONES_FAILURE',\r\n    GET_RACKS_BY_ROOM_REQUEST: 'GET_RACKS_BY_ROOM_REQUEST',\r\n    GET_RACKS_BY_ROOM_SUCCESS: 'GET_RACKS_BY_ROOM_SUCCESS',\r\n    GET_RACKS_BY_ROOM_FAILURE: 'GET_RACKS_BY_ROOM_FAILURE',\r\n    GET_DEVICE_BY_ID_SUCCESS: 'GET_DEVICE_BY_ID_SUCCESS',\r\n    GET_BOOKING_U_ID_SUCCESS: 'GET_BOOKING_U_ID_SUCCESS',\r\n    PAGINATION_RACKS: \"PAGINATION_RACKS\",\r\n    PAGINATION_RACKS_CLEAR: \"PAGINATION_RACKS_CLEAR\",\r\n    ON_PAGE_CHANGE_RACKS: \"ON_PAGE_CHANGE_RACKS\",\r\n    GET_RACK_PARENTS_SUCCESS: 'GET_RACK_PARENTS_SUCCESS',\r\n    GET_RACK_PARENTS_FAILURE: 'GET_RACK_PARENTS_FAILURE',\r\n    INSERT_RACK_REQUEST: 'INSERT_RACK_REQUEST',\r\n    INSERT_RACK_SUCCESS: 'INSERT_RACK_SUCCESS',\r\n    INSERT_RACK_FAILURE: 'INSERT_RACK_FAILURE',\r\n    UPDATE_RACK_REQUEST: 'UPDATE_RACK_REQUEST',\r\n    UPDATE_RACK_SUCCESS: 'UPDATE_RACK_SUCCESS',\r\n    UPDATE_RACK_FAILURE: 'UPDATE_RACK_FAILURE',\r\n    DELETE_RACK_REQUEST: 'DELETE_RACK_REQUEST',\r\n    DELETE_RACK_SUCCESS: 'DELETE_RACK_SUCCESS',\r\n    DELETE_RACK_FAILURE: 'DELETE_RACK_FAILURE',\r\n    UPDATE_CURRENT_RACK: 'UPDATE_CURRENT_RACK',\r\n    BOOKING_U_RACK_REQUEST: 'BOOKING_U_RACK_REQUEST',\r\n    BOOKING_U_RACK_SUCCESS: 'BOOKING_U_RACK_SUCCESS',\r\n    BOOKING_U_RACK_FAILURE: 'BOOKING_U_RACK_FAILURE',\r\n    VALIDATE_RACK: 'VALIDATE_RACK',\r\n    MODAL_RACK: 'MODAL_RACK',\r\n    HANDLE_DELETE_RACK: 'HANDLE_DELETE_RACK',\r\n    HANDLE_UPDATE_RACK: 'HANDLE_UPDATE_RACK',\r\n    INIT_UPDATE_RACK: 'INIT_UPDATE_RACK',\r\n    SEARCH_RACK: 'SEARCH_RACK',\r\n    ONCHANGE_LOCATION_RACK: 'ONCHANGE_LOCATION_RACK',\r\n    ONCHANGE_DATACENTER_RACK: 'ONCHANGE_DATACENTER_RACK',\r\n    ONCHANGE_ROOM_RACK: 'ONCHANGE_ROOM_RACK',\r\n    ONCHANGE_ZONE_RACK: 'ONCHANGE_ZONE_RACK',\r\n    HANDLE_BOOKING_U_RACK: 'HANDLE_BOOKING_U_RACK',\r\n    HANDLE_ADD_DEVICE: 'HANDLE_ADD_DEVICE',\r\n    ADD_DEVICE_RACK_SUCCESS: 'ADD_DEVICE_RACK_SUCCESS',\r\n    ADD_DEVICE_RACK_FAILURE: 'ADD_DEVICE_RACK_FAILURE',\r\n    DELETE_BOOKING_RACK_SUCCESS: 'DELETE_BOOKING_RACK_SUCCESS',\r\n    DELETE_BOOKING_RACK_FAILURE: 'DELETE_BOOKING_RACK_FAILURE',\r\n    DELETE_DEVICE_RACK_SUCCESS: 'DELETE_DEVICE_RACK_SUCCESS',\r\n    DELETE_DEVICE_RACK_FAILURE: 'DELETE_DEVICE_RACK_FAILURE',\r\n    HANDLE_MOVE_U: 'HANDLE_MOVE_U',\r\n    SAVE_MOVE_U_SUCCESS: 'SAVE_MOVE_U_SUCCESS',\r\n    SAVE_MOVE_U_FAILURE: 'SAVE_MOVE_U_FAILURE',\r\n    GET_RACK_BY_ID2_SUCCESS: 'GET_RACK_BY_ID2_SUCCESS',\r\n    GET_RACK_BY_ID2_FAILURE: 'GET_RACK_BY_ID2_FAILURE',\r\n    IMPORT_DEVICE_TO_RACK: 'IMPORT_DEVICE_TO_RACK',\r\n    //------------ end racks ------------//\r\n\r\n    //------------ layouts ------------//\r\n    GET_LAYOUTS_SUCCESS: 'GET_LAYOUTS_SUCCESS',\r\n    GET_LAYOUTS_FAILURE: 'GET_LAYOUTS_FAILURE',\r\n    GET_LAYOUT_OTHER_SUCCESS: 'GET_LAYOUT_OTHER_SUCCESS',\r\n    GET_LAYOUT_OTHER_FAILURE: 'GET_LAYOUT_OTHER_FAILURE',\r\n    GET_LAYOUTS_BY_ID_SUCCESS: 'GET_LAYOUTS_BY_ID_SUCCESS',\r\n    GET_LAYOUTS_BY_ID_FAILURE: 'GET_LAYOUTS_BY_ID_FAILURE',\r\n    PAGINATION_LAYOUTS: \"PAGINATION_LAYOUTS\",\r\n    PAGINATION_LAYOUTS_CLEAR: \"PAGINATION_LAYOUTS_CLEAR\",\r\n    ON_PAGE_CHANGE_LAYOUTS: \"ON_PAGE_CHANGE_LAYOUTS\",\r\n    GET_LAYOUT_PARENTS_SUCCESS: 'GET_LAYOUT_PARENTS_SUCCESS',\r\n    GET_LAYOUT_PARENTS_FAILURE: 'GET_LAYOUT_PARENTS_FAILURE',\r\n    INSERT_RACK_LAYOUT_REQUEST: 'INSERT_RACK_LAYOUT_REQUEST',\r\n    INSERT_RACK_LAYOUT_SUCCESS: 'INSERT_RACK_LAYOUT_SUCCESS',\r\n    INSERT_RACK_LAYOUT_FAILURE: 'INSERT_RACK_LAYOUT_FAILURE',\r\n    UPDATE_RACK_LAYOUT_REQUEST: 'UPDATE_RACK_LAYOUT_REQUEST',\r\n    UPDATE_RACK_LAYOUT_SUCCESS: 'UPDATE_RACK_LAYOUT_SUCCESS',\r\n    UPDATE_RACK_LAYOUT_FAILURE: 'UPDATE_RACK_LAYOUT_FAILURE',\r\n    DELETE_RACK_LAYOUT_REQUEST: 'DELETE_RACK_LAYOUT_REQUEST',\r\n    DELETE_RACK_LAYOUT_SUCCESS: 'DELETE_RACK_LAYOUT_SUCCESS',\r\n    DELETE_RACK_LAYOUT_FAILURE: 'DELETE_RACK_LAYOUT_FAILURE',\r\n    UPDATE_CURRENT_LAYOUT: 'UPDATE_CURRENT_LAYOUT',\r\n    UPDATE_LOADING_LAYOUT: 'UPDATE_LOADING_LAYOUT',\r\n    VALIDATE_LAYOUT: 'VALIDATE_LAYOUT',\r\n    MODAL_LAYOUT: 'MODAL_LAYOUT',\r\n    HANDLE_DELETE_RACK_LAYOUT: 'HANDLE_DELETE_RACK_LAYOUT',\r\n    HANDLE_UPDATE_LAYOUT: 'HANDLE_UPDATE_LAYOUT',\r\n    INIT_UPDATE_LAYOUT: 'INIT_UPDATE_LAYOUT',\r\n    SEARCH_LAYOUT: 'SEARCH_LAYOUT',\r\n    ONCHANGE_LOCATION_LAYOUT: 'ONCHANGE_LOCATION_LAYOUT',\r\n    ONCHANGE_DATACENTER_LAYOUT: 'ONCHANGE_DATACENTER_LAYOUT',\r\n    ONCHANGE_ROOM_LAYOUT: 'ONCHANGE_ROOM_LAYOUT',\r\n    ONCHANGE_ZONE_LAYOUT: 'ONCHANGE_ZONE_LAYOUT',\r\n\r\n    //------------ end layouts ------------//\r\n\r\n    //------------ contracts ------------//\r\n    GET_CONTRACTS_SUCCESS: 'GET_CONTRACTS_SUCCESS',\r\n    GET_CONTRACTS_FAILURE: 'GET_CONTRACTS_FAILURE',\r\n    GET_CONTRACTS_BY_ID_SUCCESS: 'GET_CONTRACTS_BY_ID_SUCCESS',\r\n    GET_CONTRACTS_BY_ID_FAILURE: 'GET_CONTRACTS_BY_ID_FAILURE',\r\n    PAGINATION_CONTRACTS: \"PAGINATION_CONTRACTS\",\r\n    PAGINATION_CONTRACTS_CLEAR: \"PAGINATION_CONTRACTS_CLEAR\",\r\n    ON_PAGE_CHANGE_CONTRACTS: \"ON_PAGE_CHANGE_CONTRACTS\",\r\n    GET_CONTRACT_PARENTS_SUCCESS: 'GET_CONTRACT_PARENTS_SUCCESS',\r\n    GET_CONTRACT_PARENTS_FAILURE: 'GET_CONTRACT_PARENTS_FAILURE',\r\n    INSERT_CONTRACT_REQUEST: 'INSERT_CONTRACT_REQUEST',\r\n    INSERT_CONTRACT_SUCCESS: 'INSERT_CONTRACT_SUCCESS',\r\n    INSERT_CONTRACT_FAILURE: 'INSERT_CONTRACT_FAILURE',\r\n    UPDATE_CONTRACT_REQUEST: 'UPDATE_CONTRACT_REQUEST',\r\n    UPDATE_CONTRACT_SUCCESS: 'UPDATE_CONTRACT_SUCCESS',\r\n    UPDATE_CONTRACT_FAILURE: 'UPDATE_CONTRACT_FAILURE',\r\n    DELETE_CONTRACT_REQUEST: 'DELETE_CONTRACT_REQUEST',\r\n    DELETE_CONTRACT_SUCCESS: 'DELETE_CONTRACT_SUCCESS',\r\n    DELETE_CONTRACT_FAILURE: 'DELETE_CONTRACT_FAILURE',\r\n    UPDATE_CURRENT_CONTRACT: 'UPDATE_CURRENT_CONTRACT',\r\n    VALIDATE_CONTRACT: 'VALIDATE_CONTRACT',\r\n    MODAL_CONTRACT: 'MODAL_CONTRACT',\r\n    HANDLE_DELETE_CONTRACT: 'HANDLE_DELETE_CONTRACT',\r\n    HANDLE_UPDATE_CONTRACT: 'HANDLE_UPDATE_CONTRACT',\r\n    INIT_UPDATE_CONTRACT: 'INIT_UPDATE_CONTRACT',\r\n    SEARCH_CONTRACT: 'SEARCH_CONTRACT',\r\n    //------------ end contracts ------------//\r\n\r\n    //------------ loading ------------//\r\n    LOADING_START: 'LOADING_START',\r\n    LOADING_STOP: 'LOADING_STOP',\r\n    //------------ end loading ------------//\r\n\r\n};\r\nexport default actionTypes;","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const actions = (state = {}, action) => {\r\n    let pagination, value, data, name, current, validate, error, temp;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_ACTION:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n            ...value,\r\n        };\r\n        case actionTypes.GET_ACTIONS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_ACTIONS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n                open: false,\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_ACTION:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_ACTION:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_ACTION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_ACTION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    actionId: value.data.actionId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_ACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_ACTION:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_ACTION:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_ACTION:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...value,\r\n                },\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_ACTION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_ACTION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2,\r\n            };\r\n        case actionTypes.DELETE_ACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0,\r\n                \r\n            };\r\n        case actionTypes.GET_ACTIONS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            data = data[0] || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...data,\r\n                },\r\n            };\r\n        case actionTypes.GET_ACTIONS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_ACTION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_ACTION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2,\r\n            };\r\n        case actionTypes.UPDATE_ACTION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_ACTION:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_ACTIONS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const groups = (state = {}, action) => {\r\n    let pagination, value, data, name, current, validate, error, list, roles, temp;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_GROUP:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n            ...value,\r\n        };\r\n        case actionTypes.GET_GROUPS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                // current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_GROUPS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n                open: false,\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_GROUP:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_GROUP:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_GROUP_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    groupId: value.data.groupId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_GROUP_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_GROUP:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_GROUP:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_GROUP:\r\n            value = action.value;\r\n            roles = value.roles || [];\r\n            temp = _.map(roles, o => o.roleId);\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...value,\r\n                    checked: temp\r\n                },\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_GROUP_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2,\r\n            };\r\n        case actionTypes.DELETE_GROUP_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0,\r\n                \r\n            };\r\n        case actionTypes.GET_GROUPS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            data = data[0] || {};\r\n            roles = data.roles || [];\r\n            temp = _.map(roles, o => o.roleId);\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...data,\r\n                    checked: temp\r\n                },\r\n            };\r\n        case actionTypes.GET_GROUPS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_GROUP_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_GROUP_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2,\r\n            };\r\n        case actionTypes.UPDATE_GROUP_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_GROUP:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_GROUPS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_GROUP_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_GROUP_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nexport const permissions = (state = {}, action) => {\r\n    let pagination, value, data, name, current, validate, error, list, _auth, temp;\r\n    switch (action.type) {\r\n        case actionTypes.GET_PERMISSION_OTHER:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_PERMISSION:\r\n            value = action.value;\r\n            current = state.current;\r\n\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    update: !current.update\r\n                }\r\n            };\r\n        case actionTypes.HANDLE_CANCEL_PERMISSION:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            _auth = current._auth || [];\r\n            temp = _.map(_auth, item => {return {routeActionId: item.routeActionId, routeId: item.routeId, actionId: item.actionId}});\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    update: !current.update,\r\n                    auth: temp\r\n                }\r\n            };\r\n        case actionTypes.HANDLE_SAVE_PERMISSION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current;\r\n\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    update: !current.update\r\n                }\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_PERMISSION:\r\n            current = state.current || {};\r\n            name = action.name;\r\n            value = action.value;\r\n\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n            };\r\n        case actionTypes.HANDLE_GET_PERMISSION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current;\r\n            temp = _.map(value, item => {return {routeActionId: item.routeActionId, routeId: item.routeId, actionId: item.actionId}});\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    _auth: value,\r\n                    auth: temp\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const routes = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, actions, actionList;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_ROUTE:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_ROUTES_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {\r\n                    actions: []\r\n                },\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_ROUTES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_ROUTE_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_ROUTE_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_ROUTE:\r\n            current = state.current || {\r\n                actions: []\r\n            };\r\n            validate = state.validate || {};\r\n            actions = current.actions || [];\r\n            actionList = state.actions || [];\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            validate[name] = error;\r\n            if(name === 'actions') {\r\n                // neu ton tai va !checked => unchecked\r\n                if(actions.indexOf(value.value) > -1 && !value.checked) {\r\n                    _.remove(actions, a => { return a === value.value;});\r\n                    if(actions.length === 1 && actions.indexOf('view') > -1) {\r\n                        current.viewReadOnly = false;\r\n                    }\r\n                } else if(actions.indexOf(value.value) === -1 && value.checked) {\r\n                    // check bat ky role nao khac view => check view va view readonly\r\n                    if(actions.indexOf('view') === -1 && value.value !== 'view') {\r\n                        actions.push('view');\r\n                    }\r\n                    current.viewReadOnly = true;\r\n                    actions.push(value.value);\r\n                }\r\n                if(actions.length < actionList.length) {\r\n                    current.indeterminate = true;\r\n                } else if(actions.length === actionList.length){\r\n                    current.indeterminate = false;\r\n                }\r\n                current.actions = actions;\r\n            } else {\r\n                if(_.isObject(value)) {\r\n                    current = {\r\n                        ...current,\r\n                        ...value\r\n                    }\r\n                } else {\r\n                    current[name] = value;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_ROUTE:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_ROUTE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_ROUTE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    routeId: value.data.routeId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_ROUTE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_ROUTE:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_ROUTE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_ROUTE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_ROUTE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_ROUTE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_ROUTE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_ROUTES_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            actions = state.actions || [];\r\n            parents = state.parents || [];\r\n            current = data[0] || {};\r\n            current.actions = _.map(current._actions, a => a.actionKey);\r\n            current.indeterminate = current.actions.length > 0 && current.actions.length < actions.length;\r\n            const code = current.code;\r\n            if(code.length === 3) {\r\n                current.isParent = true;\r\n            } else {\r\n                const parentCode = code.slice(0, 3);\r\n                const parent = _.find(parents, {code: parentCode});\r\n                if(parent) current.parentId = parent.routeId;\r\n                current.isParent = false;\r\n            }\r\n            return {\r\n                ...state,\r\n                current: current,\r\n            };\r\n        case actionTypes.GET_ROUTES_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_ROUTE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_ROUTE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_ROUTE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_ROUTE:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_ROUTES:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }   \r\n            };\r\n        case actionTypes.GET_ALL_ACTION_ROUTE_SUCCESS:\r\n            value = action.value || {};\r\n            // actions = value.data ||[];\r\n            return {\r\n                ...state,\r\n                actions: value.data ||[]\r\n            };\r\n        case actionTypes.GET_ALL_ACTION_ROUTE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.CHECK_ALL_ACTION_ROUTE:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            actions = current.actions || [];\r\n            if(value) {\r\n                const _actions = state.actions;\r\n                actions = _.map(_actions, a => {return a.actionKey});\r\n                \r\n            } else {\r\n                actions = [];\r\n            }\r\n            current.indeterminate = false;\r\n            current.actions = actions;\r\n            return {\r\n                ...state,\r\n                current\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const users = (state = {}, action) => {\r\n    let pagination, value, data, name, current, validate, error, list, groups, temp;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_USER:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n            ...value,\r\n        };\r\n        case actionTypes.GET_USERS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_USERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n                open: false,\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_USER:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_USER:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_USER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    userId: value.data.userId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_USER:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_USER:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_USER:\r\n            value = action.value;\r\n            groups = value.groups || [];\r\n            temp = _.map(groups, o => o.roleId);\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...value,\r\n                    checked: temp\r\n                },\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_USER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2,\r\n            };\r\n        case actionTypes.DELETE_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0,\r\n                \r\n            };\r\n        case actionTypes.GET_USERS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            data = data[0] || {};\r\n            groups = data.groups || [];\r\n            temp = _.map(groups, o => o.groupId);\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...data,\r\n                    checked: temp\r\n                },\r\n            };\r\n        case actionTypes.GET_USERS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_USER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2,\r\n            };\r\n        case actionTypes.UPDATE_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_USER:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_USERS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_USER_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_USER_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../_constants/actionTypes';\r\n\r\nexport const alerts = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ALERT_SUCCESS:\r\n            return {\r\n                type: 'success',\r\n                message: action.message\r\n            };\r\n        case actionTypes.ALERT_WARNING:\r\n            return {\r\n                type: 'warn',\r\n                message: action.message\r\n            };\r\n        case actionTypes.ALERT_ERROR:\r\n            return {\r\n                type: 'error',\r\n                message: action.message\r\n            };\r\n        case actionTypes.ALERT_CLEAR:\r\n            return {}; \r\n        default:\r\n            return state\r\n    }\r\n}","import actionTypes from '../../_constants/actionTypes';\r\n\r\nexport const contracts = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_CONTRACT:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_CONTRACTS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_CONTRACTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_CONTRACT_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_CONTRACT_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_CONTRACT:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_CONTRACT:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_CONTRACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_CONTRACT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    contractId: value.data.contractId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_CONTRACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_CONTRACT:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_CONTRACT:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_CONTRACT:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_CONTRACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_CONTRACT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_CONTRACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_CONTRACTS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_CONTRACTS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CONTRACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_CONTRACT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_CONTRACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_CONTRACT:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_CONTRACTS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const customers = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_CUSTOMER:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_CUSTOMERS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_CUSTOMERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_CUSTOMER_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_CUSTOMER_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_CUSTOMER:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_CUSTOMER:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_CUSTOMER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_CUSTOMER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    customerId: value.data.customerId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_CUSTOMER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_CUSTOMER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_CUSTOMER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_CUSTOMER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_CUSTOMERS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_CUSTOMERS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CUSTOMER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_CUSTOMER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_CUSTOMER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_CUSTOMERS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_CUSTOMER_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_CUSTOMER_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const datacenters = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_DATACENTER:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_DATACENTERS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_DATACENTERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_DATACENTER_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_DATACENTER_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_DATACENTER:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_DATACENTER:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_DATACENTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_DATACENTER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    dataCenterId: value.data.dataCenterId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_DATACENTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_DATACENTER:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_DATACENTER:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_DATACENTER:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_DATACENTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_DATACENTER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_DATACENTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_DATACENTERS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_DATACENTERS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_DATACENTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_DATACENTER_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_DATACENTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_DATACENTER:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_DATACENTERS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_DATACENTER_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_DATACENTER_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const departments = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_DEPARTMENT:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_DEPARTMENTS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_DEPARTMENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_DEPARTMENT_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_DEPARTMENT_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_DEPARTMENT:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_DEPARTMENT:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_DEPARTMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_DEPARTMENT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    departmentId: value.data.departmentId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_DEPARTMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_DEPARTMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_DEPARTMENT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_DEPARTMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_DEPARTMENTS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_DEPARTMENTS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_DEPARTMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_DEPARTMENT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_DEPARTMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_DEPARTMENT:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_DEPARTMENTS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_DEPARTMENT_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_DEPARTMENT_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const deviceTemplates = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_DEVICE_TEMPLATE:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_DEVICE_TEMPLATES_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n\r\n        case actionTypes.GET_DEVICE_TYPE_DEVICE_TEMPLATES_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                deviceTypes: data,\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPE_DEVICE_TEMPLATES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATE_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATE_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_DEVICE_TEMPLATE:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_DEVICE_TEMPLATE:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TEMPLATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TEMPLATE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    deviceTemplateId: value.data.deviceTemplateId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TEMPLATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.IMPORT_DEVICE_TEMPLATE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.IMPORT_DEVICE_TEMPLATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.MODAL_DEVICE_TEMPLATE:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_DEVICE_TEMPLATE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_DEVICE_TEMPLATE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TEMPLATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TEMPLATE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TEMPLATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATES_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = data[0] || {};\r\n            return {\r\n                ...state,\r\n                current: current,\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATES_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TEMPLATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TEMPLATE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TEMPLATE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_DEVICE_TEMPLATE:\r\n            name = action.name;\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    [name]: value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_DEVICE_TEMPLATES:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATE_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_DEVICE_TEMPLATE_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const deviceTypes = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_DEVICE_TYPE:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_DEVICE_TYPES_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPE_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPE_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_DEVICE_TYPE:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_DEVICE_TYPE:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TYPE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TYPE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    deviceTypeId: value.data.deviceTypeId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_DEVICE_TYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n\r\n        case actionTypes.IMPORT_DEVICE_TYPE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.IMPORT_DEVICE_TYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.MODAL_DEVICE_TYPE:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_DEVICE_TYPE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_DEVICE_TYPE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TYPE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TYPE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_DEVICE_TYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPES_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPES_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TYPE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TYPE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_DEVICE_TYPE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_DEVICE_TYPE:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_DEVICE_TYPES:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPE_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_DEVICE_TYPE_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const locations = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_LOCATION:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_LOCATIONS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_LOCATIONS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_LOCATION_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_LOCATION_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_LOCATION:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_LOCATION:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_LOCATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_LOCATION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    locationId: value.data.locationId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_LOCATION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_LOCATION:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_LOCATION:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_LOCATION:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_LOCATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_LOCATION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_LOCATION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_LOCATIONS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_LOCATIONS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_LOCATION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_LOCATION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_LOCATION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_LOCATION:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_LOCATIONS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const racks = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, image, locations, dataCenters, rooms, bookingU, bookingUs, devices, addDevice, moveU;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_RACK:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_RACKS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                // current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_RACKS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_RACK_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_RACK_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_RACK:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            error = action.error;\r\n            if(['crop', 'current'].indexOf(name) > -1) {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        ...value\r\n                    },\r\n                };\r\n            } else {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        [name]: value\r\n                    },\r\n                    validate: {\r\n                        ...validate,\r\n                        [name]: error\r\n                    }\r\n                };\r\n            }\r\n        case actionTypes.VALIDATE_RACK:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_RACK_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_RACK_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    rackId: value.data.rackId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_RACK_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_RACK:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_RACK:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_RACK:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update',\r\n            };\r\n        case actionTypes.DELETE_RACK_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_RACK_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_RACK_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_RACK_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            current = value.data || {};\r\n            return {\r\n                ...state,\r\n                current: current,\r\n            };\r\n        case actionTypes.GET_RACK_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_RACK_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_RACK_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_RACK_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_RACK:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_RACKS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_RACK_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_RACK_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.GET_RACK_OTHER_PLUS_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_RACK_OTHER_PLUS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.ONCHANGE_LOCATION_RACK:\r\n            dataCenters = state.dataCenters || [];\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(dataCenters, item => {return (value === item.locationId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    dataCenterId: ''\r\n                },\r\n                _dataCenters: data\r\n            }\r\n        case actionTypes.ONCHANGE_DATACENTER_RACK:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(rooms, item => {return (value === item.roomId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    roomId: ''\r\n                },\r\n                _rooms: data\r\n            }\r\n        case actionTypes.ONCHANGE_ROOM_RACK:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = null;\r\n            image = '';\r\n            data = _.find(rooms, {roomId: value});\r\n            if(data) {\r\n                image = data.image;\r\n            }\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    image: image\r\n                },\r\n            };\r\n        case actionTypes.HANDLE_BOOKING_U_RACK:\r\n            bookingU = state.bookingU || {};\r\n            value = action.value;\r\n            bookingU = value;\r\n            return {\r\n                ...state,\r\n                bookingU: bookingU,\r\n                validate: {}\r\n            };\r\n        case actionTypes.BOOKING_U_RACK_SUCCESS:\r\n            bookingU = {\r\n                ...state.bookingU,\r\n                saveSuccess: true\r\n            };\r\n            // console.log('bU', bookingU);\r\n            return {\r\n                ...state,\r\n                bookingU: bookingU\r\n            };\r\n        case actionTypes.HANDLE_ADD_DEVICE:\r\n            addDevice = action.value;\r\n            return {\r\n                ...state,\r\n                addDevice: addDevice,\r\n                validate: {}\r\n            };\r\n        case actionTypes.ADD_DEVICE_RACK_SUCCESS:\r\n            addDevice = {\r\n                ...state.addDevice,\r\n                saveSuccess: true\r\n            };\r\n            return {\r\n                ...state,\r\n                addDevice: addDevice\r\n            }\r\n        case actionTypes.HANDLE_MOVE_U:\r\n            moveU = action.value;\r\n            return {\r\n                ...state,\r\n                moveU: moveU,\r\n                validate: {}\r\n            }\r\n        case actionTypes.SAVE_MOVE_U_SUCCESS:\r\n            moveU = {\r\n                ...state.moveU,\r\n                saveSuccess: true\r\n            }\r\n            return {\r\n                ...state,\r\n                moveU: moveU\r\n            }\r\n        case actionTypes.GET_DEVICE_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            current = action.current || {};\r\n\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const regions = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_REGION:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_REGIONS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_REGIONS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_REGION_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_REGION_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_REGION:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_REGION:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_REGION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_REGION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    regionId: value.data.regionId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_REGION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_REGION:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_REGION:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_REGION:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_REGION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_REGION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_REGION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_REGIONS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                current: data[0] || [],\r\n            };\r\n        case actionTypes.GET_REGIONS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_REGION_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_REGION_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_REGION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_REGION:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_REGIONS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_REGION_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_REGION_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const rooms = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, list, locations, dataCenters;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_ROOM:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_ROOMS_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_ROOMS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_ROOM_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_ROOM_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_ROOM:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            value = action.value;\r\n            error = action.error;\r\n            \r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    [name]: value\r\n                },\r\n                validate: {\r\n                    ...validate,\r\n                    [name]: error\r\n                }\r\n            };\r\n        case actionTypes.VALIDATE_ROOM:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_ROOM_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_ROOM_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    roomId: value.data.roomId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_ROOM_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_ROOM:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_ROOM:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_ROOM:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_ROOM_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_ROOM_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_ROOM_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_ROOMS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = data[0] || {};\r\n            return {\r\n                ...state,\r\n                current: current,\r\n            };\r\n        case actionTypes.GET_ROOMS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_ROOM_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_ROOM_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_ROOM_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_ROOM:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_ROOMS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_ROOM_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_ROOM_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.ONCHANGE_LOCATION_ROOM:\r\n            dataCenters = state.dataCenters || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(dataCenters, item => {return (value === item.locationId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    dataCenterId: ''\r\n                },\r\n                _dataCenters: data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const zones = (state = {}, action) => {\r\n    let pagination, value, data, name, parents, current, validate, error, image, locations, dataCenters, rooms;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_ZONE:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_ZONES_SUCCESS:\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_ZONES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_ZONE_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_ZONE_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_ZONE:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            error = action.error;\r\n            if(['crop', 'current'].indexOf(name) > -1) {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        ...value\r\n                    },\r\n                };\r\n            } else {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        [name]: value\r\n                    },\r\n                    validate: {\r\n                        ...validate,\r\n                        [name]: error\r\n                    }\r\n                };\r\n            }\r\n        case actionTypes.VALIDATE_ZONE:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_ZONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_ZONE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    zoneId: value.data.zoneId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_ZONE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_ZONE:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_DELETE_ZONE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: true,\r\n                action: 'delete'\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_ZONE:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_ZONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_ZONE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {},\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_ZONE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_ZONES_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = data[0] || {};\r\n            return {\r\n                ...state,\r\n                current: current,\r\n            };\r\n        case actionTypes.GET_ZONES_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_ZONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_ZONE_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_ZONE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_ZONE:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_ZONES:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_ZONE_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_ZONE_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.ONCHANGE_LOCATION_ZONE:\r\n            dataCenters = state.dataCenters || [];\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(dataCenters, item => {return (value === item.locationId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    dataCenterId: ''\r\n                },\r\n                _dataCenters: data\r\n            }\r\n        case actionTypes.ONCHANGE_DATACENTER_ZONE:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(rooms, item => {return (value === item.dataCenterId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    roomId: ''\r\n                },\r\n                _rooms: data\r\n            }\r\n        case actionTypes.ONCHANGE_ROOM_ZONE:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = null;\r\n            image = '';\r\n            data = _.find(rooms, {roomId: value});\r\n            if(data) {\r\n                image = data.image;\r\n            }\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    image: image\r\n                },\r\n            }\r\n        case actionTypes.HANDLE_VIEW_IMAGE_ZONE:\r\n            value = action.value;\r\n            current = state.current;\r\n            return {\r\n                ...state,\r\n                openImage: true,\r\n                current: {\r\n                    ...current,\r\n                    ...value.current,\r\n                }\r\n            };\r\n        case actionTypes.HANDLE_CLOSE_VIEW_IMAGE_ZONE:\r\n            return {\r\n                ...state,\r\n                openImage: false,\r\n                current: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { sideMenuR } from './sideMenuR';\r\nimport { routes } from './admin/routeR';\r\nimport { actions } from './admin/actionR';\r\nimport { groups } from './admin/groupR';\r\nimport { users } from './admin/userR';\r\nimport { permissions } from './admin/permissionR';\r\nimport { locations } from './categories/locationR';\r\nimport { datacenters } from './categories/datacenterR';\r\nimport { rooms } from './categories/roomR';\r\nimport { zones } from './categories/zoneR';\r\nimport { customers } from './categories/customerR';\r\nimport { departments } from './categories/departmentR';\r\nimport { deviceTypes } from './categories/deviceTypeR';\r\nimport { regions } from './categories/regionR';\r\nimport { deviceTemplates } from './categories/deviceTemplateR';\r\nimport { racks } from './categories/rackR';\r\nimport { layouts } from './layoutR';\r\nimport { alerts } from './alertR';\r\nimport { loading } from './loadingR';\r\nimport { contracts } from './categories/contractR';\r\n\r\nconst appReducers = combineReducers({\r\n    sideMenuR,\r\n    routes,\r\n    actions,\r\n    groups,\r\n    users,\r\n    permissions,\r\n    alerts,\r\n    locations,\r\n    datacenters,\r\n    rooms,\r\n    zones,\r\n    customers,\r\n    departments,\r\n    regions,\r\n    deviceTypes,\r\n    deviceTemplates,\r\n    layouts,\r\n    racks,\r\n    contracts,\r\n    loading\r\n});\r\n\r\nexport default appReducers;","import actionTypes from '../_constants/actionTypes';\r\nimport _ from \"lodash\";\r\n\r\nexport const layouts = (state = {}, action) => {\r\n    let pagination, value, data, draw, shapes, parents, current, validate, error, image, racks, dataCenters, rooms, find;\r\n    switch (action.type) {\r\n        case actionTypes.INIT_UPDATE_LAYOUT:\r\n        value = action.value;\r\n        return {\r\n            ...state,\r\n           ...value,\r\n        };\r\n        case actionTypes.GET_LAYOUTS_SUCCESS:\r\n            current = state.current || {};\r\n            value = action.value;\r\n            pagination = value.pagination;\r\n            data = value.data;\r\n            return {\r\n                ...state,\r\n                pagination: pagination,\r\n                list: data,\r\n                current: {...current},\r\n                loading: 0,\r\n                action: '',\r\n                open: false,\r\n                searchLoading: false,\r\n            };\r\n        case actionTypes.GET_LAYOUTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                searchLoading: false,\r\n                loading: 0,\r\n            };\r\n        case actionTypes.GET_LAYOUT_PARENTS_SUCCESS:\r\n            value = action.value || {};\r\n            parents = value.data ||[];\r\n            return {\r\n                ...state,\r\n                parents: parents\r\n            };\r\n        case actionTypes.GET_LAYOUT_PARENTS_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_CURRENT_LAYOUT:\r\n            current = state.current || {};\r\n            validate = state.validate || {};\r\n            name = action.name;\r\n            error = action.error;\r\n            if(['crop', 'current'].indexOf(name) > -1) {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        ...value\r\n                    },\r\n                };\r\n            } if(name === 'new') {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        ...value\r\n                    },\r\n                };\r\n            } else if(name === 'current') {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        ...value\r\n                    },\r\n                };\r\n            } else  {\r\n                value = action.value;\r\n                return {\r\n                    ...state,\r\n                    current: {\r\n                        ...current,\r\n                        [name]: value\r\n                    },\r\n                    validate: {\r\n                        ...validate,\r\n                        [name]: error\r\n                    }\r\n                };\r\n            }\r\n        case actionTypes.VALIDATE_LAYOUT:\r\n            validate = state.validate || {};\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                validate: value\r\n            };\r\n        case actionTypes.INSERT_RACK_LAYOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'insert'\r\n            };\r\n        case actionTypes.INSERT_RACK_LAYOUT_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = state.current || {};\r\n            draw = current.draw || {};\r\n            shapes = draw.shapes || [];\r\n            racks = state.racks || [];\r\n            find = _.findIndex(racks, {rackId: data.rackId});\r\n            if(find === -1) racks.push(data);\r\n            find = _.find(shapes, {name: data.name});\r\n            if(find) find.id = data.rackId;\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    rackId: data.rackId\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.INSERT_RACK_LAYOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.MODAL_LAYOUT:\r\n            return {\r\n                ...state,\r\n                open: action.value,\r\n            };\r\n        case actionTypes.HANDLE_UPDATE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                current: action.value,\r\n                open: false,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.DELETE_RACK_LAYOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'delete',\r\n                open: false\r\n            };\r\n        case actionTypes.DELETE_RACK_LAYOUT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            draw = current.draw || {};\r\n            racks = state.racks || [];\r\n            shapes = draw.shapes || [];\r\n            find = _.findIndex(shapes, {id: parseInt(value.data.rackId)});\r\n            if(find > -1) {\r\n                shapes.splice(find, 1);\r\n            }\r\n            find = _.findIndex(racks, {rackId: parseInt(value.data.rackId)});\r\n            if(find > -1) {\r\n                racks.splice(find, 1);\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: 2\r\n            };\r\n        case actionTypes.DELETE_RACK_LAYOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_LAYOUTS_BY_ID_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = action.current;\r\n            const _current = data[0] || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ..._current\r\n                },\r\n            };\r\n        case actionTypes.GET_LAYOUTS_BY_ID_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.UPDATE_RACK_LAYOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n                action: 'update'\r\n            };\r\n        case actionTypes.UPDATE_RACK_LAYOUT_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data\r\n                },\r\n                loading: 2\r\n            };\r\n        case actionTypes.UPDATE_RACK_LAYOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.SEARCH_LAYOUT:\r\n            return {\r\n                ...state,\r\n                search: {\r\n                    str: action.value\r\n                },\r\n                searchLoading: true\r\n            };\r\n        case actionTypes.ON_PAGE_CHANGE_LAYOUTS:\r\n            value = action.value;\r\n            pagination = state.pagination || {};\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...pagination,\r\n                    currentPage: value\r\n                }\r\n            };\r\n        case actionTypes.GET_LAYOUT_OTHER_SUCCESS:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                ...value\r\n            };\r\n        case actionTypes.GET_LAYOUT_OTHER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n        case actionTypes.ONCHANGE_LOCATION_LAYOUT:\r\n            dataCenters = state.dataCenters || [];\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(dataCenters, item => {return (value === item.locationId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    dataCenterId: ''\r\n                },\r\n                _dataCenters: data\r\n            }\r\n        case actionTypes.ONCHANGE_DATACENTER_LAYOUT:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = _.filter(rooms, item => {return (value === item.roomId)  })\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    roomId: ''\r\n                },\r\n                _rooms: data\r\n            };\r\n        case actionTypes.ONCHANGE_ROOM_LAYOUT:\r\n            rooms = state.rooms || [];\r\n            current = state.current || {};\r\n            value = action.value;\r\n            data = null;\r\n            image = '';\r\n            data = _.find(rooms, {roomId: value});\r\n            if(data) {\r\n                image = data.image;\r\n            }\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    image: image\r\n                },\r\n            };\r\n        case actionTypes.GET_RACKS_BY_ZONE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: 1,\r\n            };\r\n        case actionTypes.GET_RACKS_BY_ZONE_SUCCESS:\r\n            value = action.value;\r\n            data = value.data;\r\n            current = state.current || {};\r\n            draw =current.draw || {};\r\n            shapes = draw.shapes || [];\r\n            racks = current.racks || [];\r\n            let name = '';\r\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n            for (let i = 0; i < 5; i++)\r\n            name += possible.charAt(Math.floor(Math.random() * possible.length));\r\n            _.forEach(data, r => {\r\n                shapes.push({\r\n                    x: r.x,\r\n                    y: r.y,\r\n                    id: r.rackId,\r\n                    width: r.width,\r\n                    height: r.height,\r\n                    draggable: true,\r\n                    name: name\r\n                });\r\n            })\r\n            // if(_.size(shapes) > 0) {\r\n\r\n            // }\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    draw: {\r\n                        ...draw,\r\n                        shapes: shapes\r\n                    }\r\n                },\r\n                racks: [\r\n                    ...racks,\r\n                    ...data\r\n                ],\r\n                loading: 2\r\n            };\r\n        case actionTypes.GET_RACKS_BY_ZONE_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: 0\r\n            };\r\n        case actionTypes.GET_RACK_BY_ID2_SUCCESS:\r\n            value = action.value;\r\n            current = state.current || {};\r\n            // current = value.data || {};\r\n            return {\r\n                ...state,\r\n                current: {\r\n                    ...current,\r\n                    ...value.data || {}\r\n                },\r\n            };\r\n        case actionTypes.GET_RACK_BY_ID2_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case actionTypes.UPDATE_LOADING_LAYOUT:\r\n            value = action.value;\r\n            return {\r\n                ...state,\r\n                loading: value\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../_constants/actionTypes';\r\n\r\nexport const loading = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOADING_START:\r\n            return {\r\n                status: true,\r\n                message: action.message\r\n            };\r\n        case actionTypes.LOADING_STOP:\r\n            return {\r\n                status: false,\r\n                message: action.message\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};","import actionTypes from '../_constants/actionTypes';\r\nconst initialState = { \r\n    smallMenu: false,\r\n    activeItem: '/',\r\n    activeIndex: -1\r\n};\r\n\r\nexport const sideMenuR = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_MENU:\r\n            const value = action.value;\r\n            return {\r\n                ...state,\r\n                smallMenu: typeof value === 'undefined'? !state.smallMenu: value\r\n            };\r\n        case actionTypes.ACTIVE_ITEM:\r\n            return {\r\n                ...state,\r\n                activeItem: action.name\r\n            };\r\n        case actionTypes.ACTIVE_INDEX_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                activeIndex: action.index\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducers from './_reducers/index';\r\n\r\nexport const initStore = () => {\r\n  return createStore(\r\n    appReducers,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n  )\r\n};\r\n","// const dotenv = require('dotenv');\n// dotenv.config();\nconst node_env = process.env.NODE_ENV;\nlet config = {};\n\n\nconfig.production = {\n    originBackend: 'https://raca.ast.fpt.net',\n    originFrontend: 'https://raca.ast.fpt.net',\n    originRoot: 'https://ast.fpt.net',\n\tprevOrigin: '/raca-api',\n\tprevURL: '',\n    // originBackend: 'http://172.27.229.69:4000'\n};\n\nconfig.development = {\n\t// originBackend: `${protocol}//${hostname}:4000`\n\toriginBackend: `http://localhost:3001`,\n    originFrontend: 'http://localhost:3000',\n\t// originRoot: 'https://ast.fpt.net',\n\toriginRoot: 'https://localhost:4000',\n\t// originRoot: 'https://172.27.137.72:4000',\n\t// originRoot: 'http://172.27.137.72:4000',\n\tprevOrigin: '/raca-api',\n\tprevURL: '',\n};\n\nconfig.environment = 'development';\n\nif (~['production'].indexOf(node_env)) {\n\tconfig.environment = 'production';\n}\n// console.log('ENV: ', config.environment ,config);\nmodule.exports = config;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"lodash\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/app\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"nookies\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-toastify\");","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"redux-thunk\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAwIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAMA;AAMA;AAAA;AAGA;AAAA;AAGA;AAzJA;AAAA;AAAA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AAPA;AASA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAYA;AACA;AAbA;AAcA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAAA;AACA;AADA;AA2BA;AACA;AA5BA;AAAA;AAAA;AAAA;AACA;AADA;AA6BA;AAAA;AACA;AA9BA;AAiCA;AAjCA;AAkCA;AAAA;AAAA;AACA;AAnCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAqCA;AACA;AAtCA;AAAA;AAAA;AACA;AADA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;AA8DA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAjBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AACA;AAZA;AAeA;AACA;AACA;AAEA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAzHA;AA8DA;AACA;AA/DA;AAAA;AAAA;AAAA;AAAA;AACA;AA2HA;AACA;AA7HA;AA8HA;AAAA;AACA;AA/HA;AAAA;AAgIA;AAAA;AACA;AAjIA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAkIA;AACA;AAnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdhBA;AAgiBA;;;;;;;;;;;;;;;;;;;;;AChiBA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AAEA;AAGA;AACA;AANA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAKA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAjLA;AAmLA;;;;;;;;;;;;;;;;;;;;;ACxLA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAnMA;AAqMA;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAHA;AAFA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAHA;AAFA;AACA;AAOA;AACA;AAnEA;AAqEA;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAVA;AACA;AAWA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AALA;AACA;AAQA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AApQA;AAsQA;;;;;;;;;;;;;;;;;;;;;AC3QA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAnMA;AAqMA;;;;;;;;;;;;AC1MA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAnBA;AAqBA;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAtLA;AAwLA;;;;;;;;;;;;;;;;;;;;;AC5LA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjMA;AAmMA;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjMA;AAmMA;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjMA;AAmMA;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AA5NA;AA8NA;;;;;;;;;;;;;;;;;;;;;ACnOA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AA7MA;AA+MA;;;;;;;;;;;;;;;;;;;;;ACpNA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAtLA;AAwLA;;;;;;;;;;;;;;;;;;;;;AC7LA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AACA;AAEA;AAIA;AANA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAIA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAFA;AACA;AAMA;AACA;AAhUA;AAkUA;;;;;;;;;;;;;;;;;;;;;ACvUA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAjMA;AAmMA;;;;;;;;;;;;;;;;;;;;;ACxMA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AANA;AACA;AAUA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AA/MA;AAiNA;;;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AACA;AAEA;AAIA;AANA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAzQA;AA2QA;;;;;;;;;;;;AChRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AADA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AACA;AAEA;AAFA;AAOA;AACA;AACA;AAEA;AAIA;AANA;AAWA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AANA;AACA;AAOA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AADA;AAGA;AALA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAFA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAGA;AACA;AACA;AADA;AAEA;AAEA;AAEA;AAFA;AAFA;AAOA;AAIA;AAbA;AACA;AAcA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AApWA;AAsWA;;;;;;;;;;;;AC3WA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAlBA;AAoBA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAIA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACjCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}